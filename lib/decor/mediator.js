// Generated by CoffeeScript 1.6.2
(function() {
  var Mediator, comerr, step, type;

  comerr = require("comerr");

  type = require("type-component");

  step = require("../utils/step");

  Mediator = (function() {
    /*
    */
    function Mediator() {
      this._listeners = {};
    }

    /*
    */


    Mediator.prototype.on = function(command, listener) {
      if (!(listener = this._listeners[command])) {
        listener = this._listeners[command] = {
          pre: [],
          post: []
        };
      }
      if (/^pre\s/.test(command)) {
        return listener.pre.push(command);
      } else if (/^post\s/.test(command)) {
        return listener.post.push(command);
      } else {
        return listener.callback = listener;
      }
    };

    /*
    */


    Mediator.prototype.execute = function(command, options, next) {
      var args, callbacks, listener;

      if (!(listener = this._listeners[command])) {
        return comerr.notFound("command '" + command + "' not found.");
      }
      args = Array.prototype.slice.call(arguments, 0);
      command = args.shift();
      callbacks = listener.pre.concat(listener.callback).concat(listener.post);
      return step(args, callbacks, next);
    };

    /*
    */


    Mediator.prototype.test = function(command) {
      return type(command) === "string";
    };

    /*
    */


    Mediator.prototype.create = function(command) {
      var _this = this;

      return function() {
        return _this.execute([command].concat(arguments));
      };
    };

    return Mediator;

  })();

  module.exports = function() {
    return new Mediator();
  };

}).call(this);
